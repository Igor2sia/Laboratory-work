Demo 1

import java.util.Scanner;


public class oop.lab_8.Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        voice(scanner.nextInt());
    }

    static void voice(int number) {
        System.out.println(
                switch (number) {
                    case 1 -> "One";
                    case 2 -> "Two";
                    case 3 -> "Three";
                    case 4 -> "Four";
                    case 5 -> "Five";
                    case 6 -> "Six";
                    case 7 -> "Seven";
                    case 8 -> "Eight";
                    case 9 -> "Nine";
                    case 10 -> "Ten";
                    default -> "I`m tired";
                }
        );
    }
}

Demo 2

public class oop.lab_8.Main {
    public static void main(String[] args) {
        sum(5, 10);
        sum(5.0,10);
        sum(5.0,5.0);
    }
    static double sum(double a, double b){
        return a + b;
    }
    static int sum(int a, int b){
        return a + b;
}


Demo 3

import java.util.Arrays;
import java.util.Scanner;


public class oop.lab_8.Main {
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        String[] str = {" ", ",", "!", "."};
        String text = scanner.nextLine();
        System.out.printf("%s, %s palindrome", text, ((isPalindrome(text.replaceAll(Arrays.toString(str), "").toLowerCase())) ? "is" : "is NOT"));
    }


    static boolean isPalindrome(String msg) {
        if (msg.length() == 0 || msg.length() == 1) return true;
        else {
            if (msg.charAt(0) != msg.charAt(msg.length() - 1)) {
                return false;
            } else {
                return isPalindrome(msg.substring(1, msg.length() - 1));
            }
        }
    }
}


TASK 1

import java.util.Scanner;

public class oop.lab_8.Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = 100;
        System.out.print("Введите координаты точки A (x1 y1): ");
        int x1 = scanner.nextInt() * n;
        int y1 = scanner.nextInt() * n;

        System.out.print("Введите координаты точки C (x2 y2): ");
        int x2 = scanner.nextInt() * n;
        int y2 = scanner.nextInt() * n;

        System.out.print("Введите координаты точки E (x3 y3): ");
        int x3 = scanner.nextInt() * n;
        int y3 = scanner.nextInt() * n;

        System.out.print("Введите координаты точки J (x4 y4): ");
        int x4 = scanner.nextInt() * n;
        int y4 = scanner.nextInt() * n;

        double result = area(x1, y1, x2, y2, x3, y3, x4, y4);

        System.out.printf("Площадь ромба: %.2f", result);
    }

    public static double area(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) {
        double diagonal1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        double diagonal2 = Math.sqrt(Math.pow(x4 - x3, 2) + Math.pow(y4 - y3, 2));
        
        double area = (diagonal1 * diagonal2) / 2;

        return area;
    }
}

TASK 2

import java.util.Scanner;

public class oop.lab_8.Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Введите строку чисел, разделенных пробелами: ");
        String input = scanner.nextLine();

        int result = maximum(input, Integer.MIN_VALUE);

        System.out.println("Максимальное значение: " + result);
    }

    public static int maximum(String text, int value) {
        if (text.isEmpty()) {
            return value;
        }

        int startIndex = 0;
        while (startIndex < text.length() && !Character.isDigit(text.charAt(startIndex)) && text.charAt(startIndex) != '-') {
            startIndex++;
        }

        int endIndex = startIndex;
        while (endIndex < text.length() && (Character.isDigit(text.charAt(endIndex)) || text.charAt(endIndex) == '-')) {
            endIndex++;
        }

        String numberStr = text.substring(startIndex, endIndex);

        int number = Integer.parseInt(numberStr);

        return maximum(text.substring(endIndex), Math.max(value, number));
    }
}

